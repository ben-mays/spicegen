// Code generated by spicegen. DO NOT EDIT
package authz

import (
	"errors"
)

type ResourceType string

const (
	User         ResourceType = "user"
	Organization ResourceType = "organization"
	Document     ResourceType = "document"
)

type Resource interface {
	ResourceType() ResourceType
	ID() string
}

func NewResource(resourceType ResourceType, ID string) (Resource, error) {
	switch resourceType {

	case User:
		return UserResource{rid: ID}, nil

	case Organization:
		return OrganizationResource{rid: ID}, nil

	case Document:
		return DocumentResource{rid: ID}, nil

	}
	return nil, errors.New("resourceType given is not valid")
}

type UserResource struct {
	rid string
}

func (r UserResource) ID() string {
	return r.rid
}

func (r UserResource) ResourceType() ResourceType {
	return User
}

func NewUserResource(ID string) UserResource {
	return UserResource{rid: ID}
}

type OrganizationResource struct {
	rid string
}

func (r OrganizationResource) ID() string {
	return r.rid
}

func (r OrganizationResource) ResourceType() ResourceType {
	return Organization
}

func NewOrganizationResource(ID string) OrganizationResource {
	return OrganizationResource{rid: ID}
}

type DocumentResource struct {
	rid string
}

func (r DocumentResource) ID() string {
	return r.rid
}

func (r DocumentResource) ResourceType() ResourceType {
	return Document
}

func NewDocumentResource(ID string) DocumentResource {
	return DocumentResource{rid: ID}
}
