// Code generated by spicegen. DO NOT EDIT
package {{.PackageName}}

import (
    "errors"
)

{{/* Create a ResourceType for each resource */}}
type ResourceType string
const (
{{ range $rsc := .Resources }}{{ $rsc.Name | ToCamel }} ResourceType = "{{ $rsc.Name }}"
{{ end }}
)

type Resource interface {
	ResourceType() ResourceType
	ID() string
}

func NewResource(resourceType ResourceType, ID string) (Resource, error) {
    switch resourceType {
        {{ range $rsc := .Resources }}{{ $resource := $rsc.Name | ToCamel }}
        case {{$resource}}: return {{ $resource }}Resource{rid: ID}, nil
        {{end}}
    }
    return nil, errors.New("resourceType given is not valid")
}


{{/* For each resource type, create a concrete struct */}}
{{ range $rsc := .Resources }}{{ $resource := $rsc.Name | ToCamel }}
type {{ $resource }}Resource struct {
	rid string
}

func (r {{ $resource }}Resource) ID() string {
	return r.rid
}

func (r {{ $resource }}Resource) ResourceType() ResourceType {
	return {{ $resource }}
}

func New{{ $resource }}Resource(ID string) {{ $resource }}Resource {
	return {{ $resource }}Resource{rid: ID}
}
{{end}}

